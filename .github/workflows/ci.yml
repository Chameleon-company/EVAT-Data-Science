name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-production:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to docker hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.CI_DOCKER_USERNAME }}
          password: ${{ secrets.CI_DOCKER_PASSWORD }}

      - name: Build the docker image
        run: |
          ls -la 
          docker build . -f Dockerfile -t ${{ secrets.CI_DOCKER_USERNAME }}/${{ secrets.APP_NAME }}:${{ github.sha }}
      
      - name: Push the docker image
        run: |
          docker push ${{ secrets.CI_DOCKER_USERNAME }}/${{ secrets.APP_NAME }}:${{ github.sha }}

  deploy-production:
    runs-on: ubuntu-latest
    needs: build-production

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to docker hub
        uses: docker/login-action@v3
        with:
          username: ${{secrets.CI_DOCKER_USERNAME}}
          password: ${{secrets.CI_DOCKER_PASSWORD}}

      - name: Create SSH directory
        run: mkdir -p ~/.ssh

      - name: Set up SSH for Deployment
        run: |
          ssh-keyscan 54.206.74.135 >> ~/.ssh/known_hosts
          echo "${{ secrets.SERVER_PROD_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Deploy to Production
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@54.206.74.135 \
          "echo '${{ secrets.CI_DOCKER_PASSWORD }}' | sudo docker login --username '${{ secrets.CI_DOCKER_USERNAME }}' --password-stdin;
          sudo docker stop '${{ secrets.APP_NAME }}';
          sudo docker rm '${{ secrets.APP_NAME }}';
          sudo docker pull '${{ secrets.CI_DOCKER_USERNAME }}'/'${{ secrets.APP_NAME }}':'${{ github.sha }}';
          sudo docker run -d -p 5000:5000 --name '${{ secrets.APP_NAME }}' '${{ secrets.CI_DOCKER_USERNAME }}'/'${{ secrets.APP_NAME }}':'${{ github.sha }}';
          sudo docker system prune -a -f;
          sudo docker logout;"
